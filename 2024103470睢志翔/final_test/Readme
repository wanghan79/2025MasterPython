目标：
    利用Python实现蛋白质构象生成，以序列为输入，生成对应的3D构象候选集。
    包括数据加载、数据预处理、深度学习模型定义（基于变分自编码器VAE或扩散模型）、训练流程、生成与评估。
    代码总量超过550行（注释不计），模块化组织，便于扩展和测试。

主要思路：
    1. 数据准备：读取蛋白质序列和已知结构(PDB)，将其转换为图结构或特征张量。
    2. 数据集与数据加载：实现Dataset类，负责批量加载序列-结构对，提供随机批次，并支持训练/验证集拆分。
    3. 模型定义：基于PyTorch实现VAE，用于学习序列到坐标映射。
    4. 训练流程：编写Trainer类，包含训练循环、损失计算（重构误差、KL散度等）、优化器、学习率调度、日志记录与可视化。
    5. 生成流程：训练完成后，随机采样潜在空间，解码为3D原子坐标，输出PDB文件和.npy文件。
    6. 评估与可视化：计算生成构象与真实结构的RMSD（包含Kabsch对齐），统计分布，并绘制统计曲线。
    7. 工具函数：包括坐标转换、文件读写、RMSD对齐、图可视化等。
    8. 主程序：命令行接口，解析参数，支持训练/生成/评估/分析四种模式。

目录结构（单文件）：
    config.py 作为全局配置中心，管理硬件选择、文件路径、模型超参数和日志系统；
    data.py 负责数据加载和预处理，包括从 PDB/FASTA 文件提取结构信息，并转换为图表示；
    model.py 定义神经网络架构，其中包含 VAE 编码器、解码器及其重参数化技巧；
    train.py 处理模型训练流程，通过 Trainer 类管理训练循环、验证和损失计算，同时可视化损失曲线；generate_eval.py 负责构象生成与质量评估，包括从潜在空间生成新构象并计算 RMSD 等评估指标；
    utils.py 提供基础工具函数，如 PDB 文件解析、坐标转换和文件操作；
    main.py 作为程序入口，解析命令行参数，调用训练、生成或评估模块，管理整体工作流程。
